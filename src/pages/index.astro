---
import { SITE_TITLE, SITE_DESCRIPTION } from 'src/consts/SiteData.js';
import MainLayout from 'src/layouts/MainLayout.astro';
import GridBackground from 'src/components/jsx/gridBackground/GridBackground/GridBackground.jsx';
import HeroSection from 'src/components/jsx/home/HeroSection/HeroSection.jsx';
import LatestPostsSection from 'src/components/jsx/home/LatestPostsSection/LatestPostsSection.jsx';
import AboutSection from 'src/components/jsx/home/AboutSection/AboutSection.jsx';
import JourneySection from 'src/components/jsx/home/JourneySection/JourneySection.jsx';
import SkillsSection from 'src/components/jsx/home/SkillsSection/SkillsSection.jsx';
import GitHubStats from 'src/components/jsx/home/GitHubStats/GitHubStats.jsx';
import { getCollection } from 'astro:content';
import portfolioData from 'src/data/portfolio/portfolio.json';
import PortfolioPreview from 'src/components/jsx/home/PortfolioPreview/PortfolioPreview';
import { getRepoMetadata, getCommitCount, fetchRepositories, getLanguageStats, fetchRepositoryStats } from 'src/lib/github.js';
import ContentContainer from 'src/components/jsx/blog/ContentContainer/ContentContainer';
import { journeyData } from 'src/data/journey/journey.js';
import { skillsData } from 'src/data/skills/skills.js';
import SettingsPanel from 'src/components/jsx/settingsPanel/SettingsPanel';
import ThemeWrapper from 'src/components/jsx/darkMode/ThemeWrapper/ThemeWrapper.jsx';
import DarkModeToggle from 'src/components/jsx/darkMode/DarkModeToggle/DarkModeToggle.jsx';

const latestPosts = (await getCollection('blog'))
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
	.slice(0, 2)
	.map((post) => ({
		title: post.data.title,
		description: post.data.description,
		pubDate: new Date(post.data.pubDate),
		heroImage: post.data.heroImage,
		slug: post.id,
		readTime: post.data.readTime,
		tags: post.data.tags,
	}));

const aboutParagraphs = [
	'I specialize in full-stack web development, with a focus on modern JS/TS frameworks and tools. My goal is to create performant, accessible, and user-friendly web applications.',
	"I use this website in my off-hours for testing new web technologies and tools.",
];

const featuredProjects = portfolioData.projects.filter(
	(project) => project.featured
);

// Fetch GitHub data
const metadata = await getRepoMetadata();
const commitCount = await getCommitCount();

const username = 'daniel-tenzler';
const repos = await fetchRepositories(username);
const languageStats = getLanguageStats(repos);
// const repoStats = await fetchRepositoryStats(username);
---

<MainLayout title={SITE_TITLE} description={SITE_DESCRIPTION}>
	<ThemeWrapper client:load>
		<GridBackground client:load />
		<!-- <SettingsPanel client:load>
			<DarkModeToggle client:load />
		</SettingsPanel> -->

		<ContentContainer client:load>
			<HeroSection
				client:load
				title="Daniel Tenzler — Junior Software Developer"
				description="Hi, I'm Daniel — a Junior Web & Native App Developer. This website is my personal portfolio and development playground."
			/>

			<PortfolioPreview client:load projects={featuredProjects} />

			<LatestPostsSection client:load posts={latestPosts} />

			<AboutSection client:load paragraphs={aboutParagraphs} />

			<JourneySection client:only="react" data={journeyData} />

			<SkillsSection client:load skills={skillsData} />

			<GitHubStats client:load metadata={metadata} commitCount={commitCount} languageStats={languageStats} />
		</ContentContainer>
	</ThemeWrapper>
</MainLayout>

<style>
	:global(.bg-accent) {
		background-color: var(--accent);
	}
	:global(.bg-accent-dark) {
		background-color: var(--accent-dark);
	}
	:global(.text-accent) {
		color: var(--accent);
	}
	:global(.hover\:text-accent:hover) {
		color: var(--accent);
	}
	:global(.hover\:bg-accent-dark:hover) {
		background-color: var(--accent-dark);
	}
	:global(.focus\:ring-accent:focus) {
		--tw-ring-color: var(--accent);
	}
</style>
